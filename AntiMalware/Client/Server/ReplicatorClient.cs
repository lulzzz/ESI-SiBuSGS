using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.ServiceModel;
using System.Security.Principal;
using System.Security.Cryptography.X509Certificates;
using Interfaces;
namespace Server
{
    class ReplicatorClient : ChannelFactory<IReplicator>, IReplicator, IDisposable
    {

        IReplicator factory;

        public ReplicatorClient(NetTcpBinding binding, EndpointAddress address)
			: base(binding, address)
		{
            /*
			/// cltCertCN.SubjectName should be set to the client's username. .NET WindowsIdentity class provides information about Windows user running the given process
			string cltCertCN = Formatter.ParseName(WindowsIdentity.GetCurrent().Name);
						
			this.Credentials.ServiceCertificate.Authentication.CertificateValidationMode = System.ServiceModel.Security.X509CertificateValidationMode.Custom;
			this.Credentials.ServiceCertificate.Authentication.CustomCertificateValidator = new ClientCertValidator();
			this.Credentials.ServiceCertificate.Authentication.RevocationMode = X509RevocationMode.NoCheck;

			/// Set appropriate client's certificate on the channel. Use CertManager class to obtain the certificate based on the "cltCertCN"
			this.Credentials.ClientCertificate.Certificate = CertManager.GetCertificateFromStorage(StoreName.My, StoreLocation.LocalMachine, cltCertCN);
            */
			factory = this.CreateChannel();
		}

        public void update()
        {
            factory.update();
        }

        public void pushClient(string ipAddress, string port)
        {
            throw new NotImplementedException();
        }
    }
}
