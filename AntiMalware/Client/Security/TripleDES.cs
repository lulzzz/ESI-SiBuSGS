using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Interfaces;

namespace Security
{
    class TripleDES : ITripleDES
    {

		private byte[] data;	// the entire data to be encrypted

		private byte[] plainBlock;	// the block upon which the encryption has to be done
		private byte[] leftHalf;
		private byte[] rightHalf;
		private byte[] encryptedBlock;
		
		public void encrypt(byte[] data, byte[] key1, byte[] key2, byte[] initizationVector, byte[] encryptedData)
        {
			//TODO: Implement
			//throw new NotImplementedException();
			if ((data.Length % 8) != 0)
			{
				throw new ArgumentException("data argument must be devidable with 8");
			}

			this.data = data;	// one block that has to be cyphered


			//TODO: XOR the first block with the initizationVector
			//here
			encryptBlock();

			for (int i = 1; i < ((data.Length) / 8); ++i)
			{
				//TODO: XOR the block with the previous block
				//here
				encryptBlock();
			}			
        }

		private void encryptBlock()
		{
			// let the encryption begin
			initialPermutation();
			splitBlock();
			for (int i = 0; i < 16; i++)
			{
				functionF();
			}
			inversePermutation();
		}

		public void decrypt(byte[] encryptedData, byte[] key1, byte[] key2, byte[] initizationVector, byte[] decryptedData)
        {			
			encrypt(encryptedData, key1, key2, initizationVector, decryptedData);
        }

		private void initialPermutation()
		{
			//TODO: Implement
		}

		private void splitBlock()
		{
			//TODO: Implement
		}

		private void functionF()
		{
			//TODO: Implement
			ebox();

			// XOR with key here!

			sbox();	// Paralelization here
			pbox();

			// XOR with left half of the block
			// Right block becomes the left block

		}

		private void inversePermutation()
		{
			//TODO: Implement
		}

		private void ebox()
		{
			//TODO: Implement
		}

		private void sbox()
		{
			//TODO: Implement
		}

		private void pbox()
		{
			//TODO: Implement
		}

    }
}
